import requests
from bs4 import BeautifulSoup

def check_reverse_tabnabbing(url):
    try:
        # Access the page and retrieve the HTML content
        response = requests.get(url)
        if response.status_code != 200:
            print(f"Error accessing the page: {response.status_code}")
            return

        # Parse the HTML content
        soup = BeautifulSoup(response.content, 'html.parser')

        # Find all links (tags <a>)
        links = soup.find_all('a')

        # Show all links found on the page
        print("\nAll links found on the page:")
        for link in links:
            print(link.get('href'))

        # Variable to count vulnerable links
        vulnerable_links = 0

        # Check links with target="_blank" for 'rel="noopener"' or 'rel="noreferrer"'
        print("\nChecking for vulnerable links (target='_blank'):")
        for link in links:
            if link.get('target') == '_blank':
                if 'rel' not in link.attrs or ('noopener' not in link['rel'] and 'noreferrer' not in link['rel']):
                    vulnerable_links += 1
                    print(f"Vulnerable link found: {link.get('href')}")

        # Display the final result
        if vulnerable_links == 0:
            print("\nNo links vulnerable to Reverse Tabnabbing were found.")
        else:
            print(f"\nTotal of {vulnerable_links} vulnerable links found.")

    except Exception as e:
        print(f"Error: {e}")

# Example usage:
url = "https://example.com"  # Replace with the URL you want to analyze
check_reverse_tabnabbing(url)
